{{#section 'pageTitle'}} Blogs {{/section}}
{{#section 'title'}} Admin | Blogs {{/section}}
{{#section 'action'}}
<a href="/web/blog/create" type="button" class="btn btn-info btn-addon"><i class="fa fa-plus"></i> Add Blog</a>
{{/section}}


<div class="panel panel-white">
  <div class="panel-heading clearfix">
    <h4 class="panel-title">Basic example</h4>
  </div>
  <div class="errors"></div>
  <div class="panel-body">
    <div class="table-responsive">
      <table id="example" class="display table" style="width: 100%; cellspacing: 0;">
        <thead>
          <tr>
            <th>Picture</th>
            <th>Author</th>
            <th>Title</th>
            <th>Content</th>
            <th>Actions</th>
          </tr>
        </thead>

        <tbody>
          <tr class="loader text-center">
            <td></td>
            <td colspan="3">
              <i class="fa fa-spinner fa-spin fa-4x"></i>
            </td>
            <td></td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>

{{#section 'script'}}
<script>
  let blogs = [],
    errors = [];

  const generateTable = (blogs) => {
    if (blogs.length > 0) {
      blogs.forEach(blog => {
        const tr = `
          <tr>
            <td> <img width="200px" src="/${blog.picture}"> </td>
            <td> ${blog.author} </td>
            <td> ${blog.title} </td>
            <td width="20%">  ${blog.content} </td>
            <td> 
              <button class="btn btn-danger btn-addon">
                <i class="fa fa-trash"></i>
              </button> 
            </td>
          </tr>
        `
        document.querySelector('#example tbody').innerHTML += tr
      })
    }
  }

  const loader = (isLoading = false) => {
    if (!isLoading) {
      document.querySelector('.loader').style.display = 'none'
    }
  }

  const getBlogs = async () => {
    try {
      loader(true)
      const response = await axios.get('/api/blog')

      const { data: blog } = response

      if (response.status === 200) {
        loader(false)
        await generateTable(blog)
      } else {
        loader(false)
        errors.push(response.message)
        await createError()
      }

    } catch (e) {
      loader(false)
      if (e.response) {
        errors.push(e.response.data.message)
      } else {
        errors.push(e.message)
      }
      await createError()
    }
  }

  getBlogs()
</script>
{{/section}}